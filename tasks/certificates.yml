---
- name: Create certificate directory
  file:
    path: "{{ mysql_certificates_dir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0750

- name: Create CA certificate
  ansible.builtin.command:
    cmd: >-
      cd {{ mysql_certificates_dir }}
      openssl genrsa 2048 > ca-key.pem
      openssl req -new -x509 -nodes -days 1000 -key ca-key.pem > ca-cert.pem
    creates: "{{ mysql_certificates_dir }}/ca-cert.pem"
  when: mysql_replication_role == 'master'
  
- name: Create server certificate
  ansible.builtin.command:
    cmd: >-
      cd {{ mysql_certificates_dir }}
      openssl req -newkey rsa:2048 -days 1000 -nodes -keyout server-key.pem > server-req.pem
      openssl x509 -req -in server-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 > server-cert.pem
    creates: "{{ mysql_certificates_dir }}/server-cert.pem"
  when: mysql_replication_role == 'master'

- name: Create client certificate
  ansible.builtin.command:
    cmd: >-
      cd {{ mysql_certificates_dir }}
      openssl req -newkey rsa:2048 -days 1000 -nodes -keyout client-key.pem > client-req.pem
      openssl x509 -req -in client-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 > client-cert.pem
    creates: "{{ mysql_certificates_dir }}/client-cert.pem"
  when: mysql_replication_role == 'master'

  - name: Copy CA certificate to slave
  synchronize:
    src: "{{ mysql_certificates_dir }}/ca-cert.pem"
    dest: "{{ mysql_certificates_dir }}/ca-cert.pem"
  delegate_to: "{{ mysql_replication_master_inventory_host | default(omit, true) }}"
  when: mysql_replication_role == 'slave'

- name: Copy client certificate to slave
  synchronize:
    src: "{{ mysql_certificates_dir }}/client-cert.pem"
    dest: "{{ mysql_certificates_dir }}/client-cert.pem"
  delegate_to: "{{ mysql_replication_master_inventory_host | default(omit, true) }}"
  when: mysql_replication_role == 'slave'
