---
- name: Create /etc/mysql/newcerts
  file:
    path: /etc/mysql/newcerts
    state: directory
    owner: mysql
    group: mysql
    mode: 0750

- name: Create CA certificate
  ansible.builtin.command:
    cmd: >-
      /etc/mysql/newcerts
      openssl genrsa 2048 > ca-key.pem
      openssl req -new -x509 -nodes -days 1000 -key ca-key.pem > ca-cert.pem
    creates: /etc/mysql/newcerts/ca-cert.pem
  when: mysql_replication_role == 'master'
  
- name: Create server certificate
  ansible.builtin.command:
    cmd: >-
      /etc/mysql/newcerts
      openssl req -newkey rsa:2048 -days 1000 -nodes -keyout server-key.pem > server-req.pem
      openssl x509 -req -in server-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 > server-cert.pem
    creates: /etc/mysql/newcerts/server-cert.pem
  when: mysql_replication_role == 'master'

- name: Create client certificate
  ansible.builtin.command:
    cmd: >-
      /etc/mysql/newcerts
      openssl req -newkey rsa:2048 -days 1000 -nodes -keyout client-key.pem > client-req.pem
      openssl x509 -req -in client-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 > client-cert.pem
    creates: /etc/mysql/newcerts/client-cert.pem
  when: mysql_replication_role == 'master'

- name: Copy client certificate to slave
  synchronize:
    src: /etc/mysql/newcerts/client-cert.pem
    dest: /etc/mysql/newcerts/client-cert.pem
  delegate_to: "{{ mysql_replication_master_inventory_host | default(omit, true) }}"
  when: mysql_replication_role == 'slave'
